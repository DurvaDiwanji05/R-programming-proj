Version: 1.0

RestoreWorkspace: Default
SaveWorkspace: Default
AlwaysSaveHistory: Default

EnableCodeIndexing: Yes
UseSpacesForTab: Yes
NumSpacesForTab: 2
Encoding: UTF-8

RnwWeave: Sweave
LaTeX: pdfLaTeX

#basic functions in R
?airquality
print(airquality)
head(airquality)
tail(airquality)
nrow(airquality)
ncol(airquality)
dim(airquality)
names(airquality)
rownames(airquality)
colnames(airquality)
airquality$Ozone
airquality$Temp
airquality$Wind
airquality$Solar.R

#statistical analysis
mean(airquality$Temp)
mean(airquality$Wind)
mean(airquality$Month)
mean(airquality$Day)
median(airquality$Temp)
median(airquality$Wind)
median(airquality$Month)
median(airquality$Day)
min(airquality$Wind)
min(airquality$Temp)
min(airquality$Month)
min(airquality$Day)
max(airquality$Wind)
max(airquality$Temp)
max(airquality$Month)
max(airquality$Day)
quantile(airquality$Wind,c(0.75))
quantile(airquality$Temp,c(0.75))
quantile(airquality$Month,c(0.75))
quantile(airquality$Day,c(0.75))
quantile(airquality$Wind)
quantile(airquality$Temp)
quantile(airquality$Month)
quantile(airquality$Day)
var(airquality$Wind)
var(airquality$Temp)
var(airquality$Month)
var(airquality$Day)
sd(airquality$Wind)
sd(airquality$Temp)
sd(airquality$Month)
sd(airquality$Day)
summary(airquality)

#data visualization
library(ggplot2)
barplot(airquality$Wind,xlab='Avg Wind Speed',col='blue',main='Wind graph')
barplot(airquality$Wind,ylab='Avg Wind Speed',col='blue',main='Wind graph',horiz='true')
hist(airquality$Temp,xlab='Temperature',main='Daily Maximum Temperature',col='green')
boxplot(airquality$Ozone,xlab='Parts per billion',main='Ozone at Roosevelt Island in 2 hours',
        col='yellow')
boxplot(airquality[,0:6],main='Box plot for Air Quality parameters',col='white',border='red')
plot(airquality$Solar.R,airquality$Month,main='Solar Radiation',xlab='Solar radiation',
     ylab='Month of observation',pch=2)
mytable=table(airquality$Wind[1:40])
lbls=paste(names(mytable),'\n',mytable,sep='')
pie(mytable,labels=lbls,main='pie chart for avg wind speed')

library(plotrix)
mytable=table(airquality$Wind[1:20])
lbls=paste(names(mytable),'\n',mytable,sep='')
pie3D(mytable,labels=lbls,main='3D pie chart for avg wind speed',col=rainbow(length(mytable)))
plot(airquality$Temp,type="l",,lwd=3,lty=1,ylab='Temperature',main='Line chart for maximum 
     daily temperature',col='blue')

#data manipulation
library(dplyr)
filter(airquality,Solar.R>200)
distinct(airquality,Ozone)
arrange(airquality,Wind)
select(airquality,Wind,Solar.R)
rename(airquality,Solar_Radiation=Solar.R)
mutate(airquality,avg=Day/4)

#machine learning algorithm: linear regression
data(airquality)
str(airquality)
head(airquality)

col1=mapply(anyNA,airquality)
col1

Y=airquality[,'Temp']
X=airquality[,'Day']
model1=lm(Y~X)
model1

plot(Y~X)
abline(model1,col='red',lwd=3)

p1=predict(model1,data.frame('X'=8))
p1
